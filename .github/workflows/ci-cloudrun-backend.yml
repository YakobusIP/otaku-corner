name: Deploy to Google Cloud Run

on:
  push:
    branches: ['production']
    paths: ['.github/workflows/**', 'backend/**']
  pull_request:
    branches: ['production']
    paths: ['.github/workflows/**', 'backend/**']


jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2.0.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authenticate Docker
        run: |
          gcloud auth configure-docker ${{ vars.GCP_REPO_REGION }}-docker.pkg.dev --quiet

      - name: Build Docker image
        working-directory: ./backend
        run: docker build --tag ${{ vars.GCP_REPO_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/otaku-corner/otaku-corner-be:${{ github.sha }} .

      - name: Push image to Artifact Registry
        run: docker push ${{ vars.GCP_REPO_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/otaku-corner/otaku-corner-be:${{ github.sha }}

      - name: Deploy image to Google Cloud Run
        run: |
          gcloud run deploy roadtofit-be \
            --image ${{ vars.GCP_REPO_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/otaku-corner/otaku-corner-be:${{ github.sha }} \
            --platform managed \
            --region ${{ vars.GCP_CLOUD_RUN_REGION }} \
            --allow-unauthenticated \
            --service-account ${{ secrets.GCS_CLOUD_RUN_SA }} \
            --vpc-connector backend-redis-connector \
            --set-env-vars \
                DATABASE_URL=${{ secrets.DATABASE_URL }} \
                DIRECT_URL=${{ secrets.DIRECT_URL }} \
                ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }} \
                REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }} \
                ACCESS_TOKEN_DURATION=${{ vars.ACCESS_TOKEN_DURATION }} \
                REFRESH_TOKEN_DURATION=${{ vars.REFRESH_TOKEN_DURATION }} \
                MAX_FILE_SIZE=${{ vars.MAX_FILE_SIZE }} \
                GCS_BUCKET_NAME=${{ vars.GCS_BUCKET_NAME }} \
                BULL_REDIS_IP=${{ secrets.BULL_REDIS_IP }} \
                BULL_REDIS_PORT=${{ secrets.BULL_REDIS_PORT }} \
                ADMIN_APP_URL=${{ vars.ADMIN_APP_URL }} \
                PUBLIC_APP_URL=${{ vars.PUBLIC_APP_URL }} \
            --port 5000 \
            --min-instances 0 \
            --max-instances 2